version: "3.9"

volumes:
  geowebcache_data:
  geoserver_data:

include:
  - ./infra.yml

x-gs-dependencies: &gs-dependencies
  rabbitmq:
    condition: service_healthy
    required: true
  discovery:
    condition: service_healthy
    required: true
  acl:
    condition: service_healthy
    required: true
  geodatabase:
    condition: service_started
    required: true
  init-test-data:
    condition: service_completed_successfully
    required: true

services:
  # --- MinIO como S3 local ---
  minio:
    image: quay.io/minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- InicializaciÃ³n de datos ---
  init-test-data:
    image: alpine:3.18.4
    user: root
    volumes:
      - geoserver_data:/mnt/geoserver_data
      - geowebcache_data:/mnt/geowebcache_data
      - ./sampledata.tgz:/tmp/sampledata.tgz
    command: >
      sh -c "chown -R ${GS_USER} /mnt/geoserver_data /mnt/geowebcache_data &&
             cd /mnt/geoserver_data &&
             if [ ! -d sampledata ]; then tar xvzf /tmp/sampledata.tgz && chown -R ${GS_USER} sampledata; fi"

  # --- ACL Service ---
  acl:
    image: ${ACL_REPOSITORY}/geoserver-acl:${ACL_TAG}
    environment:
      PG_HOST: geodatabase
      PG_PORT: 5432
      PG_DB: geoserver
      PG_SCHEMA: acl
      PG_USERNAME: geoserver
      PG_PASSWORD: geoserver
      ACL_USERS_ADMIN_PASSWORD: "{noop}s3cr3t"
      ACL_USERS_GEOSERVER_PASSWORD: "{noop}s3cr3t"
      GEOSERVER_BUS_ENABLED: "true"
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    depends_on:
      geodatabase:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 2G

  # --- Config Service ---
  config:
    image: ${REPOSITORY}/geoserver-cloud-config:${TAG}
    user: ${GS_USER}
    environment:
      JAVA_OPTS: "${JAVA_OPTS_DEFAULT}"
      SPRING_PROFILES_ACTIVE: "${CONFIG_SERVER_DEFAULT_PROFILES}"
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    volumes:
      - ../config:/etc/geoserver:ro
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 256M

  # --- Eureka Discovery Service ---
  discovery:
    image: ${REPOSITORY}/geoserver-cloud-discovery:${TAG}
    user: ${GS_USER}
    environment:
      JAVA_OPTS: "${JAVA_OPTS_DEFAULT}"
      SPRING_PROFILES_ACTIVE: "${DISCOVERY_SERVER_DEFAULT_PROFILES}"
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    restart: unless-stopped
    depends_on:
      - config
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 512M

  # --- Gateway ---
  gateway:
    image: ${REPOSITORY}/geoserver-cloud-gateway:${TAG}
    user: ${GS_USER}
    depends_on:
      discovery:
        condition: service_healthy
    environment:
      JAVA_OPTS: "${JAVA_OPTS_DEFAULT}"
      GEOSERVER_BASE_PATH: ${GEOSERVER_BASE_PATH}
      SPRING_PROFILES_ACTIVE: "${GATEWAY_DEFAULT_PROFILES}"
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    ports:
      - ${GATEWAY_PORT}:8080
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 2G

  # --- Servicios GeoServer ---
  wfs:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-wfs:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies

  wms:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-wms:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies

  wcs:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-wcs:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies

  wps:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-wps:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies

  gwc:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-gwc:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 2G

  rest:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-rest:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies

  webui:
    extends:
      file: templates.yml
      service: gstemplate
    image: ${REPOSITORY}/geoserver-cloud-webui:${TAG}
    environment:
      GEOSERVER_DATA_DIR: s3://geoserver
      GS_S3_ENDPOINT: http://minio:9000
      GS_S3_BUCKET: geoserver
      GS_S3_ACCESS_KEY: minioadmin
      GS_S3_SECRET_KEY: minioadmin
      GS_S3_REGION: us-east-1
      GS_S3_USE_PATH_STYLE: "true"
    depends_on: *gs-dependencies
